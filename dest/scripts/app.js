angular.module("angular-pixi",[]),function(){"use strict";angular.module("angular-pixi").service("PIXI",function(){return PIXI})}(),angular.module("angular-pixi").directive("pixi",["$parse","$window","PIXI",function($parse,$window,PIXI){return{restrict:"E",template:"<canvas>Not supported</canvas>",scope:{width:"=",height:"=",stage:"=",renderer:"@?",fps:"@?",renderFunc:"=?",autoResize:"@?",transparent:"@?",clearBeforeRender:"=?",backgroundColor:"=?"},controller:["$scope","$element","$attrs",function($scope,$element,$attrs){function renderLoop(){requestAnimationFrame(renderLoop),now=Date.now(),delta=now-then,delta>interval&&(then=now-delta%interval,self.render(delta))}var self=this;$scope.stage||(console.log("create default pixi container"),$scope.stage=new PIXI.Container);var renderer,view=$element.find("canvas")[0],options={view:view,transparent:$scope.transparent||!1,antialias:$scope.antialias||!1,resolution:$scope.resolution||1,clearBeforeRender:$scope.clearBeforeRender||!1,autoResize:$scope.autoResize||!1,backgroundColor:$scope.backgroundColor||0};switch(console.log(options),$scope.renderer){case"canvas":renderer=new PIXI.CanvasRenderer(view.width,view.height,options);break;case"webgl":try{renderer=new PIXI.WebGLRenderer(view.width,view.height,options)}catch(e){return void $scope.$emit("pixi.webgl.init.exception",e)}break;default:renderer=PIXI.autoDetectRenderer(view.width,view.height,options)}$scope.$watch("width",function(width){renderer.resize($scope.width,$scope.height)}),$scope.$watch("height",function(height){renderer.resize($scope.width,$scope.height)}),this.render=function(delta,force){var doRender=!0;$scope.renderFunc&&(doRender=$scope.renderFunc(renderer,$scope.stage,delta)),(force||doRender!==!1)&&renderer.render($scope.stage)};var now,delta,fps=$scope.fps||30,interval=1e3/fps,then=Date.now();requestAnimationFrame(renderLoop),this.getContainer=function(){return container},this.getRenderer=function(){return renderer},this.getContext=function(){return renderer.gl?renderer.gl:renderer.context}}]}}]);
//# sourceMappingURL=app.js.map
