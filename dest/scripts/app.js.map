{"version":3,"sources":["app.js","PIXI.js","pixi.js"],"names":["angular","module","service","PIXI","directive","$parse","$window","restrict","template","scope","width","height","stage","renderer","fps","renderFunc","autoResize","transparent","clearBeforeRender","backgroundColor","controller","$scope","$element","$attrs","renderLoop","requestAnimationFrame","now","Date","delta","then","interval","self","render","this","console","log","Container","view","find","options","antialias","resolution","CanvasRenderer","WebGLRenderer","e","$emit","autoDetectRenderer","$watch","resize","force","doRender","getContainer","container","getRenderer","getContext","gl","context"],"mappings":"AAAAA,QAAQC,OAAO,mBCAf,WACE,YACAD,SAAQC,OAAO,gBAAgBC,QAAQ,OAAQ,WAC7C,MAAOC,WCHXH,QAAQC,OAAO,gBAAgBG,UAAU,QAAA,SAAA,UAAA,OAAQ,SAAUC,OAAQC,QAASH,MAC1E,OACEI,SAAU,IACVC,SAAU,iCACVC,OACEC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,SAAU,KACVC,IAAK,KACLC,WAAY,KACZC,WAAY,KACZC,YAAa,KACbC,kBAAmB,KACnBC,gBAAiB,MAEnBC,YAAA,SAAA,WAAA,SAAY,SAAUC,OAAQC,SAAUC,QAkEtC,QAASC,cACPC,sBAAsBD,YACtBE,IAAMC,KAAKD,MACXE,MAAQF,IAAMG,KACVD,MAAQE,WACVD,KAAOH,IAAOE,MAAQE,SACtBC,KAAKC,OAAOJ,QAvEhB,GAAIG,MAAOE,IAENZ,QAAOT,QACVsB,QAAQC,IAAI,iCACZd,OAAOT,MAAQ,GAAIT,MAAKiC,UAI1B,IAAIvB,UAEAwB,KAAOf,SAASgB,KAAK,UAAU,GAE/BC,SACFF,KAAMA,KACNpB,YAAaI,OAAOJ,cAAe,EACnCuB,UAAWnB,OAAOmB,YAAa,EAC/BC,WAAYpB,OAAOoB,YAAc,EACjCvB,kBAAmBG,OAAOH,oBAAqB,EAC/CF,WAAYK,OAAOL,aAAc,EACjCG,gBAAiBE,OAAOF,iBAAmB,EAK7C,QAFAe,QAAQC,IAAII,SAEJlB,OAAOR,UACb,IAAK,SACHA,SAAW,GAAIV,MAAKuC,eAAeL,KAAK3B,MAAO2B,KAAK1B,OAAQ4B,QAC5D,MACF,KAAK,QACH,IACE1B,SAAW,GAAIV,MAAKwC,cAAcN,KAAK3B,MAAO2B,KAAK1B,OAAQ4B,SAC3D,MAAOK,GAEP,WADAvB,QAAOwB,MAAM,4BAA6BD,GAG5C,KACF,SACE/B,SAAWV,KAAK2C,mBAAmBT,KAAK3B,MAAO2B,KAAK1B,OAAQ4B,SAIhElB,OAAO0B,OAAO,QAAS,SAASrC,OAC9BG,SAASmC,OAAO3B,OAAOX,MAAOW,OAAOV,UAGvCU,OAAO0B,OAAO,SAAU,SAASpC,QAC/BE,SAASmC,OAAO3B,OAAOX,MAAOW,OAAOV,UAGvCsB,KAAKD,OAAS,SAAgBJ,MAAOqB,OACnC,GAAIC,WAAW,CACX7B,QAAON,aACTmC,SAAW7B,OAAON,WAAWF,SAAUQ,OAAOT,MAAOgB,SAEnDqB,OAASC,YAAa,IACxBrC,SAASmB,OAAOX,OAAOT,OAI3B,IAGIc,KACAE,MAJAd,IAAMO,OAAOP,KAAO,GAEpBgB,SAAW,IAAOhB,IAGlBe,KAAOF,KAAKD,KAUhBD,uBAAsBD,YAEtBS,KAAKkB,aAAe,WAClB,MAAOC,YAGTnB,KAAKoB,YAAc,WACjB,MAAOxC,WAGToB,KAAKqB,WAAa,WAChB,MAAIzC,UAAS0C,GACJ1C,SAAS0C,GAET1C,SAAS2C","file":"app.js","sourcesContent":["angular.module('angular-pixi', []);","(function() {\n  'use strict';\n  angular.module('angular-pixi').service('PIXI', function() {\n    return PIXI;\n  });\n})();","angular.module('angular-pixi').directive('pixi', function ($parse, $window, PIXI) {\n  return {\n    restrict: 'E',\n    template: '<canvas>Not supported</canvas>',\n    scope: {\n      width: '=',\n      height: '=',\n      stage: '=',\n      renderer: '@?',\n      fps: '@?',\n      renderFunc: '=?',\n      autoResize: '@?',\n      transparent: '@?',\n      clearBeforeRender: '=?',\n      backgroundColor: '=?',\n    },\n    controller: function ($scope, $element, $attrs) {\n      var self = this;\n\n      if (!$scope.stage) {\n        console.log(\"create default pixi container\");\n        $scope.stage = new PIXI.Container();\n        //TODO: reassign to attribute\n      }\n\n      var renderer;\n\n      var view = $element.find('canvas')[0];\n\n      var options = {\n        view: view,\n        transparent: $scope.transparent || false,\n        antialias: $scope.antialias || false,\n        resolution: $scope.resolution || 1,\n        clearBeforeRender: $scope.clearBeforeRender || false,\n        autoResize: $scope.autoResize || false,\n        backgroundColor: $scope.backgroundColor || 0x000000,\n      };\n\n      console.log(options);\n\n      switch ($scope.renderer) {\n        case 'canvas':\n          renderer = new PIXI.CanvasRenderer(view.width, view.height, options);\n          break;\n        case 'webgl':\n          try {\n            renderer = new PIXI.WebGLRenderer(view.width, view.height, options);\n          } catch (e) {\n            $scope.$emit('pixi.webgl.init.exception', e);\n            return;\n          }\n          break;\n        default:\n          renderer = PIXI.autoDetectRenderer(view.width, view.height, options);\n          break;\n      }\n\n      $scope.$watch('width', function(width) {\n        renderer.resize($scope.width, $scope.height);\n      });\n\n      $scope.$watch('height', function(height) {\n        renderer.resize($scope.width, $scope.height);\n      });\n\n      this.render = function render(delta, force) {\n        var doRender = true;\n        if ($scope.renderFunc) {\n          doRender = $scope.renderFunc(renderer, $scope.stage, delta);\n        }\n        if (force || doRender !== false) {\n          renderer.render($scope.stage);\n        }\n      };\n\n      var fps = $scope.fps || 30;\n\n      var interval = 1000 / fps;\n      var now,\n          delta,\n          then = Date.now();\n      function renderLoop() {\n        requestAnimationFrame(renderLoop);\n        now = Date.now();\n        delta = now - then;\n        if (delta > interval) {\n          then = now - (delta % interval);\n          self.render(delta);\n        }\n      }\n      requestAnimationFrame(renderLoop);\n\n      this.getContainer = function () {\n        return container;\n      };\n\n      this.getRenderer = function () {\n        return renderer;\n      };\n\n      this.getContext = function () {\n        if (renderer.gl) {\n          return renderer.gl;\n        } else {\n          return renderer.context;\n        }\n      };\n    }\n  };\n});\n"],"sourceRoot":"/source/"}